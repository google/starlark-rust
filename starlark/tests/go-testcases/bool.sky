# Tests of Skylark 'bool'

# truth
assert_(True)
assert_(not False)

# bool conversion
assert_eq([bool(), bool(1), bool(0), bool("hello"), bool("")],
          [False, True, False, True, False])

# comparison
assert_(None == None)
assert_(None != False)
assert_(None != True)
assert_eq(1==1, True)
assert_eq(1==2, False)
assert_(False == False)
assert_(True == True)

# ordered comparison
assert_(False < True)
assert_(False <= True)
assert_(False <= False)
assert_(True > False)
assert_(True >= False)
assert_(True >= True)

# conditional expression
assert_eq(1 if 3 > 2 else 0, 1)
assert_eq(1 if "foo" else 0, 1)
assert_eq(1 if "" else 0, 0)

# short-circuit evaluation of 'and' and 'or':
# 'or' yields the first true operand, or the last if all are false.
assert_eq(0 or "" or [] or 0, 0)
assert_eq(0 or "" or [] or 123 or 1/0, 123)
---
0 or "" or [] or 0 or 1/0  ### division by zero
---
# 'and' yields the first false operand, or the last if all are true.
assert_eq(1 and "a" and [1] and 123, 123)
assert_eq(1 and "a" and [1] and 0 and 1/0, 0)
---
1 and "a" and [1] and 123 and 1/0  ### division by zero
